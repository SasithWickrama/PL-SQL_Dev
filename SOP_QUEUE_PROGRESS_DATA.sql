CREATE OR REPLACE PROCEDURE CLARITY_ADMIN.SOP_QUEUE_PROGRESS_DATA ( STD_DATE IN  DATE , END_DATE IN  DATE ) IS

ST_DATE   DATE := STD_DATE ;
ED_DATE   DATE := END_DATE ;

CURSOR GET_SOP_SEIT_ID_DAT IS

SELECT
SOPQ_MANS_NAME,
COUNT(STATUS) TOT,
COUNT(DECODE(Status,'Success','Success',NULL))T_SUS,
CASE 
    WHEN COUNT(STATUS) = 0 THEN 0
    ELSE ROUND((((COUNT(DECODE(Status,'Success','Success',NULL))) / COUNT(STATUS))*100),2)
END AS SUS_RATE,
COUNT(DECODE(Status,'Fail','Fail',NULL))T_FAIL,
CASE 
    WHEN COUNT(STATUS) = 0 THEN 0
    ELSE ROUND((((COUNT(DECODE(Status,'Fail','Fail',NULL))) / COUNT(STATUS))*100),2)
END AS FAL_RATE

FROM
(
SELECT
SEIT_ID,
SOPQ_MANS_NAME,
DECODE(SUM(DECODE(SOPQ_STATUS,'COMPLETED',0,1)),0,'Success','Fail') STATUS

FROM
SERVICE_ORDERS                  ,
SERVICE_IMPLEMENTATION_TASKS    ,
SOP_QUEUE  

WHERE
        SERO_ID          = SEIT_SERO_ID
AND     SEIT_ID          = SOPQ_SEIT_ID
AND     SERO_DATECREATED BETWEEN ST_DATE AND ED_DATE

GROUP BY 
SEIT_ID,
SOPQ_MANS_NAME
)
GROUP BY SOPQ_MANS_NAME;

GET_SOP_SEIT_ID_DAT_REC         GET_SOP_SEIT_ID_DAT%ROWTYPE;

BEGIN

DELETE FROM CLARITY_ADMIN.SOP_SUMMARY_REPORT WHERE SCR_MANS_NAME IS NOT NULL;

OPEN GET_SOP_SEIT_ID_DAT;

LOOP 

FETCH GET_SOP_SEIT_ID_DAT INTO GET_SOP_SEIT_ID_DAT_REC ;

EXIT WHEN GET_SOP_SEIT_ID_DAT%NOTFOUND;

INSERT INTO CLARITY_ADMIN.SOP_SUMMARY_REPORT
(
SCR_MANS_NAME,
TOTAL_COUNT,
SUCESS_COUNT,
SUCESS_RATE,
FALSE_COUNT,
FALSE_RATE

)
VALUES
(
GET_SOP_SEIT_ID_DAT_REC.SOPQ_MANS_NAME,
GET_SOP_SEIT_ID_DAT_REC.TOT,
GET_SOP_SEIT_ID_DAT_REC.T_SUS,
TO_CHAR (GET_SOP_SEIT_ID_DAT_REC.SUS_RATE)||'%',
GET_SOP_SEIT_ID_DAT_REC.T_FAIL,
TO_CHAR (GET_SOP_SEIT_ID_DAT_REC.FAL_RATE)||'%'
); 

END LOOP;

CLOSE GET_SOP_SEIT_ID_DAT;

COMMIT;

END SOP_QUEUE_PROGRESS_DATA;

---- Sasith 12-12-2013 -----
/
